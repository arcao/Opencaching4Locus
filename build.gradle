// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.androidGradleVer = '3.1.0'
    ext.gradleVersionsPluginVer = '0.17.0'
    ext.kotlinVer = '1.2.31'

    ext.isTravis = 'true' == System.getenv('TRAVIS')
    ext.preDexEnabled = 'true' == System.getProperty('pre-dex', 'true')

    repositories {
        jcenter()
        google()
        // maven { url 'https://maven.fabric.io/public' }
        // maven { url 'http://dl.bintray.com/kotlin/kotlin-eap-1.2' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.0'
        classpath "com.github.ben-manes:gradle-versions-plugin:$gradleVersionsPluginVer"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVer"
        // classpath 'io.fabric.tools:gradle:1.24.1'
    }
}

allprojects {
    apply plugin: 'com.github.ben-manes.versions'

    repositories {
        jcenter()
        google()
        // maven { url 'https://maven.fabric.io/public' }
        //maven { url 'http://dl.bintray.com/kotlin/kotlin-eap-1.2' }
    }

    // dependencyUpdates: suggest only released artifacts
    dependencyUpdates.resolutionStrategy = {
        componentSelection { rules ->
            rules.all { ComponentSelection selection ->
                boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { selection.candidate.version ==~ /(?i).*[.-]${it}.*/ }
                if (rejected)
                    selection.reject('Release candidate')
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def gitSha() {
    return 'git rev-parse --short HEAD'.execute([], rootDir).text.trim()
}

def gitTimestamp() {
    return  'git log -n 1 --format=%aI'.execute([], rootDir).text.trim()
}

def gitVersionCode() {
    return 'git rev-list --count HEAD'.execute([], rootDir).text.trim().toInteger()
}