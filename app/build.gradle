apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
// apply plugin: 'io.fabric'

dependencies {
    def supportVer = '26.1.0'
    def constraintLayoutVer = '1.1.0-beta2'
    def locusApiVer = '0.2.11'
    def timberVer = '4.5.1'
    def scribeJavaVer = '4.2.0'
    def okHttpVer = '3.9.0'
    def retrofitVer = '2.3.0'
    def moshiVer = '1.5.0'
    def lifecycleVer = "1.0.0-beta2"
    def daggerVer = '2.12'
    def rxJavaVer = '2.1.5'
    def rxAndroidVer = '2.0.1'
    def rxKotlinVer = '2.1.0'
    def mockitoKotlinVer = "1.5.0"
    def kluentVer = '1.30'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlinVer"

    // Android Support
    implementation "com.android.support:support-compat:$supportVer"
    implementation "com.android.support:support-core-utils:$supportVer"
    implementation "com.android.support:support-core-ui:$supportVer"
    implementation "com.android.support:support-fragment:$supportVer"
    implementation "com.android.support:support-annotations:$supportVer"
    implementation "com.android.support:appcompat-v7:$supportVer"
    implementation "com.android.support:design:$supportVer"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVer"

    // Databinding
    kapt "com.android.databinding:compiler:$androidGradleVer"

    // Locus API
    implementation "com.asamm:locus-api-android:$locusApiVer"

    // Logging API
    implementation "com.jakewharton.timber:timber:$timberVer"

    // ScribeJava
    implementation "com.github.scribejava:scribejava-core:$scribeJavaVer"
    implementation "com.github.scribejava:scribejava-httpclient-okhttp:$scribeJavaVer"

    // Crashlytics
    // implementation 'com.crashlytics.sdk.android:crashlytics:2.6.8'

    // Networking
    implementation "com.squareup.okhttp3:okhttp:$okHttpVer"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVer"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVer"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVer"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVer"
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVer"

    // Lifecyles, LiveData and ViewModel
    implementation "android.arch.lifecycle:runtime:$lifecycleVer"
    implementation "android.arch.lifecycle:extensions:$lifecycleVer"
    implementation "android.arch.lifecycle:reactivestreams:$lifecycleVer"
    kapt "android.arch.lifecycle:compiler:$lifecycleVer"

    // Dagger 2
    implementation "com.google.dagger:dagger-android:$daggerVer"
    implementation "com.google.dagger:dagger-android-support:$daggerVer"
    kapt "com.google.dagger:dagger-compiler:$daggerVer"
    kapt "com.google.dagger:dagger-android-processor:$daggerVer"

    // RxJava, RxAndroid, RxKotlin
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVer"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVer"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlinVer"

    // JUnit
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVer"
    testImplementation "com.nhaarman:mockito-kotlin:$mockitoKotlinVer"
    testImplementation "org.amshove.kluent:kluent:$kluentVer"
}

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    dataBinding {
        enabled = true
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries preDexEnabled && !isTravis
    }

    defaultConfig {
        minSdkVersion hasProperty('devBuild') ? 26 : 21
        targetSdkVersion 26
        versionCode gitVersionCode()
        archivesBaseName = parent.name
        buildConfigField 'String', 'GIT_SHA', '"' + gitSha() + '"'
        buildConfigField 'String', 'BUILD_TIME', '"' + gitTimestamp() + '"'

        buildConfigField 'String', 'OC_PL_CONSUMER_KEY', '"9w4tqST4TUNrGYQKnkgQ"'
        buildConfigField 'String', 'OC_PL_CONSUMER_SECRET', '"HpLKCKsf42k4ndmBV6wFQaVpYCYcM6SkkvVM5dTX"'

        resConfigs 'en'
    }

    compileOptions {
        encoding 'UTF-8'
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            keyAlias = 'opencaching4locus'
        }
    }

    buildTypes {
        debug {
            ext.enableCrashlytics = false
            versionNameSuffix '-dev'
        }
        release {
            versionNameSuffix ''

            //signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true

            proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
            proguardFiles fileTree(dir: 'proguard', include: '*.pro') as File[]
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'org/apache/http/version.properties'
        exclude 'templates/release-notes.vm'
        exclude 'log4j.xml'
    }
    lintOptions { abortOnError false }
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xmaxerrs" << "500" // or whatever number you want
    }
}

if (project.hasProperty('storeFile') &&
        project.hasProperty('storePassword') &&
        project.hasProperty('keyPassword')) {
    android.signingConfigs.release.storeFile = file(storeFile)
    android.signingConfigs.release.storePassword = storePassword
    android.signingConfigs.release.keyPassword = keyPassword
} else {
    android.buildTypes.release.signingConfig = android.signingConfigs.debug
}
repositories {
    mavenCentral()
}